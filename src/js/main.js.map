{"version":3,"sources":["main.js"],"names":["require","bgValues","ctValues","countyValues","ctRenderer","type","symbol","color","outline","width","countRenderer","bgRenderer","ctTemplate","title","content","text","bgTemplate","countyTemplate","map","basemap","view","container","center","zoom","censusBlocks","url","outFields","visible","renderer","popupTemplate","query","censusTracts","ctQuery","county","$links","$","$arrows","$panelDivs","$content","target","isActive","$allLinks","home","baseToggle","nextBasemap","layerList","document","legend","valueSelect","bgReportValues","ctValueSelect","ctReportValues","features","response","values","feature","item","option","option2","ctOption","ctOption2","selValue","value","countyLayerView","filter","where","excludedEffect","ctValue","layerView","bgValue","gridDiv","gridFields","dataStore","objectStore","idProperty","countyTask","blockTask","tractTask","params","returnGeometry","graphics","createGrid","data","obj","grid","carGrid","ageGrid","educateGrid","langGrid","incomeGrid","populationGrid","columns","field","label","sortable","hidden","declare","dojoNum","format","doClear","boundaryValue","attributeName","ctAttributeName","countyAttributeName","console","customExportCSV","evt","csv","convertArrayOfObjectsToCSV","encodedUri","encodeURI","link","columnDelimiter","lineDelimiter","keys","Object","result","ctr"],"mappings":"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","sourcesContent":["require([\r\n  \"esri/Map\",\r\n  \"esri/WebMap\",\r\n  \"esri/views/MapView\",\r\n  \"esri/widgets/LayerList\",\r\n  \"esri/layers/FeatureLayer\",\r\n  \"esri/widgets/Home\",\r\n  \"esri/widgets/BasemapToggle\",\r\n  \"esri/widgets/Zoom\",\r\n  \"esri/widgets/Legend\",\r\n  \"esri/tasks/QueryTask\",\r\n  \"esri/tasks/support/Query\",\r\n  \"dgrid/OnDemandGrid\",\r\n  \"dgrid/extensions/ColumnHider\",\r\n  \"dojo/store/Memory\",\r\n  \"dstore/legacy/StoreAdapter\",\r\n  \"dgrid/Selection\",\r\n  \"dojo/_base/declare\",\r\n  \"dojo/number\",\r\n  \"dojox/grid/EnhancedGrid\",\r\n  \"dojox/grid/enhanced/plugins/exporter/CSVWriter\"\r\n], function(\r\n  Map,\r\n  WebMap,\r\n  MapView,\r\n  LayerList,\r\n  FeatureLayer,\r\n  Home,\r\n  BasemapToggle,\r\n  Zoom,\r\n  Legend,\r\n  QueryTask,\r\n  Query,\r\n  OnDemandGrid,\r\n  ColumnHider,\r\n  Memory,\r\n  StoreAdapter,\r\n  Selection,\r\n  declare,\r\n  dojoNum,\r\n  EnhancedGrid,\r\n  CSVWriter\r\n) {\r\n  //==========================\r\n  //Variable list\r\n  var bgValues = [];\r\n  var ctValues = [];\r\n  var countyValues = [];\r\n\r\n  //==========================\r\n  //Set up the renderers for the layers\r\n  var ctRenderer = {\r\n    type: \"simple\",\r\n    symbol: {\r\n      type: \"simple-fill\",\r\n      color: [0, 0, 0, 0],\r\n      outline: {\r\n        color: [128, 0, 0, 0.7],\r\n        width: 2\r\n      }\r\n    }\r\n  };\r\n\r\n  var countRenderer = {\r\n    type: \"simple\",\r\n    symbol: {\r\n      type: \"simple-fill\",\r\n      color: [255, 211, 127, 0.5],\r\n      outline: {\r\n        color: [110, 110, 110, 0.5],\r\n        width: 1.5\r\n      }\r\n    }\r\n  };\r\n\r\n  var bgRenderer = {\r\n    type: \"simple\",\r\n    symbol: {\r\n      type: \"simple-fill\",\r\n      color: [0, 0, 0, 0],\r\n      outline: {\r\n        color: [0, 77, 168, 0.7],\r\n        width: 1.5\r\n      }\r\n    }\r\n  };\r\n\r\n  //==========================\r\n  //Create the different popup templates\r\n  var ctTemplate = {\r\n    title: \"{Tract}\",\r\n    content: [\r\n      {\r\n        type: \"text\",\r\n        text:\r\n        \"<b>Total Population</b>: {Pop_Total}<br /><b>Total Number of Households</b>: {HH_Total}<br /><b>Total Number of Housing Units</b>: {HU_Total}<br /> <br /><b>White Population</b>: {Pop_White}<br /><b>Black Population</b>: {Pop_Black}<br /><b>Hispanic Population</b>: {Pop_Hispanic}<br /><b>Asian Population</b>: {Pop_Asian}<br /><b>Other Population</b>: {Pop_Other}<br /> <br /><b>People under age 5</b>: {Age_Under_5}<br /><b>People between age 5 and 17</b>: {Age_5to17}<br /><b>People between age 18 and 34</b>: {Age_18to34}<br /><b>People between age 35 and 64</b>: {Age_35to64}<br /><b>People Age 65 and Older</b>: {Age_65plus}<br /> <br /><b>Households with no car</b>: {Auto_0_Car}<br /><b>Households with 1 car</b>: {Auto_1_Car}<br /><b>Households with 2 cars</b>: {Auto_2_Car}<br /><b>Households with 3 cars</b>: {Auto_3_Car}<br /><b>Households with 4+ cars</b>: {Auto_4Plus_Car}<br /> <br /><b>People with no high school degree</b>: {Edu_No_High_School}<br /><b>People with high school degree</b>: {Edu_High_School}<br /><b>People with Associate/some degree</b>: {Edu_Associate}<br /><b>People with Bachelor's degree</b>: {Edu_Bachelors}<br /><b>People with graduate degree</b>: {Edu_Graduate}<br /> <br /><b>People who speak No English</b>: {Lang_No_Eng}<br /><b>People who speak English not well</b>: {Lang_Eng_Not_Well}<br /><b>People who speak English well</b>: {Lang_Eng_Well}<br /><b>People who speak English very well</b>: {Lang_Eng_Very_Well}<br /><b>People who speak English Only</b>: {Lang_Eng_Only}<br /> <br /><b>Households above poverty</b>: {Pov_Above}<br /><b>Households below poverty</b>: {Pov_Below}<br /><b>Household Income below 25k</b>: {Inc_Below_25}<br /><b>Household Income between 25k and 50k</b>: {Inc_25To50}<br /><b>Household Income between 50k and 100k</b>: {Inc_50To100}<br /><b>Household Income above 100k</b>: {Inc_Above_100}<br /><b>Median household income</b>: {Inc_HH_Median}<br /> <br /><b>Housing - owner occupied</b>: {H_Owner}<br /><b>Housing - renter occupied</b>:  {H_Renter}<br /> <br /><b>Means of travel to work - carpool</b>: {Mot_Carpool}<br /><b>Means of travel to work - drove alone</b>: {Mot_Drove_Alone}<br /><b>Means of travel to work - other</b>: {Mot_Other}<br /><b>Means of travel to work - ped/bike</b>: {Mot_Pedbike}<br /><b>Means of travel to work - telework</b>: {Mot_Telework}<br /><b>Means of travel to work - transit</b>: {Mot_Transit}<br /> <br /><b>Travel time to work - below 5 mins</b>: {Ttw_Below_5}<br /><b>Travel time to work - 5 to 15 mins</b>: {Ttw_5To15}<br /><b>Travel time to work - 15 to 30 mins</b>: {Ttw_15To30} <br /><b>Travel time to work - 30 to 60 mins</b>: {Ttw_30To60}<br /><b>Travel time to work - 60 mins and above</b>: {Ttw_60Plus}<br /> <br /><b>% of people with income below poverty level (past 12 months)</b>: {Pov_rate}<br /><b>Unemployment Rate</b>: {Unemp_rate}<br /><b>Median House Value</b>: {Med_hu_val}<br /><b>Mean Travel Time to Work</b>: {Pop_Total}<br /> <br /><b>Total Population in 1980</b>: {tp_1980}<br /><b>Total Population in 1990</b>: {tp_1990}<br /><b>Total Population in 2000</b>: {tp_2000}<br /><b>Total Population in 2010</b>: {tp_2010}<br /><b><br />Census Tract Page</b>: <a href='{Tract_Website}' target='_blank'>Click for More Information</a>\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  var bgTemplate = {\r\n    title: \"{Block_Group}\",\r\n    content: [\r\n      {\r\n        type: \"text\",\r\n        text:\r\n        \"<b>Total Population</b>: {Pop_Total}<br /><b>Total Number of Households</b>: {HH_Total}<br /><b>Total Number of Housing Units</b>: {HU_Total}<br /> <br /><b>White Population</b>: {Pop_White}<br /><b>Black Population</b>: {Pop_Black}<br /><b>Hispanic Population</b>: {Pop_Hispanic}<br /><b>Asian Population</b>: {Pop_Asian}<br /><b>Other Population</b>: {Pop_Other}<br /> <br /><b>People under age 5</b>: {Age_Under_5}<br /><b>People between age 5 and 17</b>: {Age_5to17}<br /><b>People between age 18 and 34</b>: {Age_18to34}<br /><b>People between age 35 and 64</b>: {Age_35to64}<br /><b>People Age 65 and Older</b>: {Age_65plus}<br /> <br /><b>Households with no car</b>: {Auto_0_Car}<br /><b>Households with 1 car</b>: {Auto_1_Car}<br /><b>Households with 2 cars</b>: {Auto_2_Car}<br /><b>Households with 3 cars</b>: {Auto_3_Car}<br /><b>Households with 4+ cars</b>: {Auto_4Plus_Car}<br /> <br /><b>People with no high school degree</b>: {Edu_No_High_School}<br /><b>People with high school degree</b>: {Edu_High_School}<br /><b>People with Associate/some degree</b>: {Edu_Associate}<br /><b>People with Bachelor's degree</b>: {Edu_Bachelors}<br /><b>People with graduate degree</b>: {Edu_Graduate}<br /> <br /><b>People who speak No English</b>: {Lang_No_Eng}<br /><b>People who speak English not well</b>: {Lang_Eng_Not_Well}<br /><b>People who speak English well</b>: {Lang_Eng_Well}<br /><b>People who speak English very well</b>: {Lang_Eng_Very_Well}<br /><b>People who speak English Only</b>: {Lang_Eng_Only}<br /> <br /><b>Households above poverty</b>: {Pov_Above}<br /><b>Households below poverty</b>: {Pov_Below}<br /><b>Household Income below 25k</b>: {Inc_Below_25}<br /><b>Household Income between 25k and 50k</b>: {Inc_25To50}<br /><b>Household Income between 50k and 100k</b>: {Inc_50To100}<br /><b>Household Income above 100k</b>: {Inc_Above_100}<br /><b>Median household income</b>: {Inc_HH_Median}<br /> <br /><b>Housing - owner occupied</b>: {H_Owner}<br /><b>Housing - renter occupied</b>:  {H_Renter}<br /> <br /><b>Means of travel to work - carpool</b>: {Mot_Carpool}<br /><b>Means of travel to work - drove alone</b>: {Mot_Drove_Alone}<br /><b>Means of travel to work - other</b>: {Mot_Other}<br /><b>Means of travel to work - ped/bike</b>: {Mot_Pedbike}<br /><b>Means of travel to work - telework</b>: {Mot_Telework}<br /><b>Means of travel to work - transit</b>: {Mot_Transit}<br /> <br /><b>Travel time to work - below 5 mins</b>: {Ttw_Below_5}<br /><b>Travel time to work - 5 to 15 mins</b>: {Ttw_5To15}<br /><b>Travel time to work - 15 to 30 mins</b>: {Ttw_15To30} <br /><b>Travel time to work - 30 to 60 mins</b>: {Ttw_30To60}<br /><b>Travel time to work - 60 mins and above</b>: {Ttw_60Plus}<br /> <br /><b>% of people with income below poverty level (past 12 months)</b>: {Pov_rate}<br /><b>Unemployment Rate</b>: {Unemp_rate}<br /><b>Median House Value</b>: {Med_hu_val}<br /><b>Mean Travel Time to Work</b>: {Pop_Total}<br /> <br /><b>Total Population in 1980</b>: {tp_1980}<br /><b>Total Population in 1990</b>: {tp_1990}<br /><b>Total Population in 2000</b>: {tp_2000}<br /><b>Total Population in 2010</b>: {tp_2010}\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  var countyTemplate = {\r\n    title: \"{Name}\",\r\n    content: [\r\n      {\r\n        type: \"text\",\r\n        text:\r\n        \"<b>Total Population</b>: {Pop_Total}<br /><b>Total Number of Households</b>: {HH_Total}<br /><b>Total Number of Housing Units</b>: {HU_Total}<br /> <br /><b>White Population</b>: {Pop_White}<br /><b>Black Population</b>: {Pop_Black}<br /><b>Hispanic Population</b>: {Pop_Hispanic}<br /><b>Asian Population</b>: {Pop_Asian}<br /><b>Other Population</b>: {Pop_Other}<br /> <br /><b>People under age 5</b>: {Age_Under_5}<br /><b>People between age 5 and 17</b>: {Age_5to17}<br /><b>People between age 18 and 34</b>: {Age_18to34}<br /><b>People between age 35 and 64</b>: {Age_35to64}<br /><b>People Age 65 and Older</b>: {Age_65plus}<br /> <br /><b>Households with no car</b>: {Auto_0_Car}<br /><b>Households with 1 car</b>: {Auto_1_Car}<br /><b>Households with 2 cars</b>: {Auto_2_Car}<br /><b>Households with 3 cars</b>: {Auto_3_Car}<br /><b>Households with 4+ cars</b>: {Auto_4Plus_Car}<br /> <br /><b>People with no high school degree</b>: {Edu_No_High_School}<br /><b>People with high school degree</b>: {Edu_High_School}<br /><b>People with Associate/some degree</b>: {Edu_Associate}<br /><b>People with Bachelor's degree</b>: {Edu_Bachelors}<br /><b>People with graduate degree</b>: {Edu_Graduate}<br /> <br /><b>People who speak No English</b>: {Lang_No_Eng}<br /><b>People who speak English not well</b>: {Lang_Eng_Not_Well}<br /><b>People who speak English well</b>: {Lang_Eng_Well}<br /><b>People who speak English very well</b>: {Lang_Eng_Very_Well}<br /><b>People who speak English Only</b>: {Lang_Eng_Only}<br /> <br /><b>Households above poverty</b>: {Pov_Above}<br /><b>Households below poverty</b>: {Pov_Below}<br /><b>Household Income below 25k</b>: {Inc_Below_25}<br /><b>Household Income between 25k and 50k</b>: {Inc_25To50}<br /><b>Household Income between 50k and 100k</b>: {Inc_50To100}<br /><b>Household Income above 100k</b>: {Inc_Above_100}<br /><b>Median household income</b>: {Inc_HH_Median}<br /> <br /><b>Housing - owner occupied</b>: {H_Owner}<br /><b>Housing - renter occupied</b>:  {H_Renter}<br /> <br /><b>Means of travel to work - carpool</b>: {Mot_Carpool}<br /><b>Means of travel to work - drove alone</b>: {Mot_Drove_Alone}<br /><b>Means of travel to work - other</b>: {Mot_Other}<br /><b>Means of travel to work - ped/bike</b>: {Mot_Pedbike}<br /><b>Means of travel to work - telework</b>: {Mot_Telework}<br /><b>Means of travel to work - transit</b>: {Mot_Transit}<br /> <br /><b>Travel time to work - below 5 mins</b>: {Ttw_Below_5}<br /><b>Travel time to work - 5 to 15 mins</b>: {Ttw_5To15}<br /><b>Travel time to work - 15 to 30 mins</b>: {Ttw_15To30} <br /><b>Travel time to work - 30 to 60 mins</b>: {Ttw_30To60}<br /><b>Travel time to work - 60 mins and above</b>: {Ttw_60Plus}<br /> <br /><b>% of people with income below poverty level (past 12 months)</b>: {Pov_rate}<br /><b>Unemployment Rate</b>: {Unemp_rate}<br /><b>Median House Value</b>: {Med_hu_val}<br /><b>Mean Travel Time to Work</b>: {Pop_Total}<br /> <br /><b>Total Population in 1980</b>: {tp_1980}<br /><b>Total Population in 1990</b>: {tp_1990}<br /><b>Total Population in 2000</b>: {tp_2000}<br /><b>Total Population in 2010</b>: {tp_2010}<br /><b><br />County Page</b>: <a href='{County_Website}' target='_blank'>Click for More Information</a>\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  //==========================\r\n  //Create the map and the map view\r\n  // var webmap = new WebMap({\r\n  //   portalItem:{\r\n  //       id: \"9f1826cb80d94582951c7e00146b6dcf\"\r\n  //   }\r\n  // });\r\n  var map = new Map({\r\n    basemap: \"streets-navigation-vector\"\r\n  });\r\n\r\n  var view = new MapView({\r\n    map: map,\r\n    container: \"viewDiv\",\r\n    center: [-95.444, 29.756],\r\n    zoom: 8\r\n  });\r\n  view.ui.remove(\"zoom\");\r\n\r\n  var censusBlocks = new FeatureLayer({\r\n    url:\r\n      \"https://gis.h-gac.com/arcgis/rest/services/Census_ACS/Census_ACS_5Yr_Block_Groups/MapServer/0\",\r\n    outFields: [\"*\"],\r\n    visible: false,\r\n    title: \"Block Groups\",\r\n    renderer: bgRenderer,\r\n    popupTemplate: bgTemplate\r\n  });\r\n\r\n  var query = censusBlocks.createQuery();\r\n  query.outFields = [\"Block_Group\"];\r\n  censusBlocks\r\n    .queryFeatures(query)\r\n    .then(bgFieldValues)\r\n    .then(addBGToValueSelect);\r\n\r\n  var censusTracts = new FeatureLayer({\r\n    url:\r\n      \"https://gis.h-gac.com/arcgis/rest/services/Census_ACS/Census_ACS_5Yr_Tracts/MapServer/0\",\r\n    outFields: [\"*\"],\r\n    visible: false,\r\n    title: \"Census Tracts\",\r\n    renderer: ctRenderer,\r\n    popupTemplate: ctTemplate\r\n  });\r\n\r\n  var ctQuery = censusTracts.createQuery();\r\n  ctQuery.outFields = [\"Tract\"];\r\n  censusTracts\r\n    .queryFeatures(ctQuery)\r\n    .then(ctFieldValues)\r\n    .then(addCTtoValueSelect);\r\n\r\n  var county = new FeatureLayer({\r\n    url:\r\n      \"https://gis.h-gac.com/arcgis/rest/services/Census_ACS/Census_ACS_5Yr_Counties/MapServer/0\",\r\n    outFields: [\"*\"],\r\n    title: \"Counties\",\r\n    renderer: countRenderer,\r\n    popupTemplate: countyTemplate\r\n  });\r\n\r\n  //Add the layers to the map\r\n  map.add(county);\r\n  map.add(censusTracts);\r\n  map.add(censusBlocks);\r\n\r\n  //============================\r\n  //Create the variables for the sidebar clicks\r\n  let $links = $(\".components li\");\r\n  let $arrows = $(\".arrow-left\");\r\n  let $panelDivs = $(\".panelDiv\");\r\n  let $content = $(\"#content\");\r\n\r\n  //Function for sidebar links click\r\n  $links.on(\"click\", function(e) {\r\n    let target = $(this).attr(\"panel-target\");\r\n    $(\"viewDiv\").css(\"visibility\", \"visible\");\r\n    $(\"container\").css(\"flex\", \"1\");\r\n\r\n    let isActive = $(this).hasClass(\"active\");\r\n    $links.removeClass(\"active\");\r\n    $arrows.hide();\r\n    $panelDivs.hide();\r\n\r\n    if (isActive) {\r\n      $content.hide();\r\n    } else {\r\n      $content.show();\r\n      var $allLinks = $(`[panel-target=${target}]`);\r\n\r\n      $allLinks.addClass(\"active\");\r\n      $allLinks.find(\".arrow-left\").show();\r\n\r\n      $(`div[panel-id=${target}]`).fadeIn(400);\r\n    }\r\n  });\r\n\r\n  //Close the content panel when clicked\r\n  $(\"#content\").on(\"click\", \".closePanel\", function() {\r\n    $(\"#viewDiv\").css(\"visibility\", \"visible\");\r\n    $(\"#container\").css(\"flex\", \"1\");\r\n    $links.removeClass(\"active\");\r\n    $arrows.hide();\r\n    $panelDivs.hide();\r\n    $content.hide();\r\n  });\r\n\r\n  //==================================\r\n  //Create the widgets for the application\r\n  var zoom = new Zoom({\r\n    view: view\r\n  });\r\n  view.ui.add(zoom, \"bottom-right\");\r\n\r\n  var home = new Home({\r\n    view: view\r\n  });\r\n  view.ui.add(home, \"bottom-right\");\r\n\r\n  var baseToggle = new BasemapToggle({\r\n    view: view,\r\n    nextBasemap: \"hybrid\"\r\n  });\r\n  view.ui.add(baseToggle, \"bottom-right\");\r\n\r\n  var layerList = new LayerList({\r\n    view: view,\r\n    container: document.getElementById(\"layerList\")\r\n  });\r\n\r\n  var legend = new Legend({\r\n    view: view,\r\n    container: document.getElementById(\"legendList\")\r\n  });\r\n\r\n  //=====================================\r\n  //Functions to populate the dropdown list\r\n  var valueSelect = document.getElementById(\"bgValueType\");\r\n  var bgReportValues = document.getElementById(\"bgAttSelect\");\r\n  var ctValueSelect = document.getElementById(\"ctValueType\");\r\n  var ctReportValues = document.getElementById(\"ctAttSelect\");\r\n  // var countValueType = document.getElementById(\"countValueType\");\r\n\r\n  function bgFieldValues(response) {\r\n    var features = response.features;\r\n    var values = features.map(feature => {\r\n      return feature.attributes.Block_Group;\r\n    });\r\n    return values;\r\n  }\r\n\r\n  function addBGToValueSelect(values) {\r\n    values.forEach((item, i) => {\r\n      if (\r\n        (bgValues.length < 1 || bgValues.indexOf(item) === -1) &&\r\n        item !== \"\"\r\n      ) {\r\n        bgValues.push(item);\r\n      }\r\n    });\r\n    bgValues.sort();\r\n    bgValues.forEach(value => {\r\n      var option = document.createElement(\"option\");\r\n      var option2 = document.createElement(\"option\");\r\n      option.text = value;\r\n      option2.text = value;\r\n      valueSelect.add(option);\r\n      bgReportValues.add(option2);\r\n    });\r\n  }\r\n\r\n  function ctFieldValues(response) {\r\n    var features = response.features;\r\n    var values = features.map(feature => {\r\n      return feature.attributes.Tract;\r\n    });\r\n    return values;\r\n  }\r\n\r\n  function addCTtoValueSelect(values) {\r\n    values.forEach((item, i) => {\r\n      if (\r\n        (ctValues.length < 1 || ctValues.indexOf(item) === -1) &&\r\n        item !== \"\"\r\n      ) {\r\n        ctValues.push(item);\r\n      }\r\n    });\r\n    ctValues.sort();\r\n    ctValues.forEach(value => {\r\n      var ctOption = document.createElement(\"option\");\r\n      var ctOption2 = document.createElement(\"option\");\r\n      ctOption.text = value;\r\n      ctOption2.text = value;\r\n      ctValueSelect.add(ctOption);\r\n      ctReportValues.add(ctOption2);\r\n    });\r\n  }\r\n\r\n  //===================================\r\n  //Check to see which dropdown has been selected\r\n  $(\"#boundaryType\").change(() => {\r\n    var selValue = $(\"#boundaryType\").val();\r\n    if (selValue == \"BlockGroups\") {\r\n      $(\"#bgValueType\").show();\r\n      $(\"#bgValueType\").css(\"visibility\", \"visible\");\r\n      $(\"#ctValueType\").hide();\r\n      $(\"#ctValueType\").css(\"visibility\", \"hidden\");\r\n      $(\"#countValueType\").hide();\r\n      $(\"#countValueType\").css(\"visibility\", \"hidden\");\r\n    } else if (selValue == \"CensusTracts\") {\r\n      $(\"#bgValueType\").hide();\r\n      $(\"#bgValueType\").css(\"visibility\", \"hidden\");\r\n      $(\"#ctValueType\").show();\r\n      $(\"#ctValueType\").css(\"visibility\", \"visible\");\r\n      $(\"#countValueType\").hide();\r\n      $(\"#countValueType\").css(\"visibility\", \"hidden\");\r\n    } else if (selValue == \"County\") {\r\n      $(\"#bgValueType\").hide();\r\n      $(\"#bgValueType\").css(\"visibility\", \"hidden\");\r\n      $(\"#ctValueType\").hide();\r\n      $(\"#ctValueType\").css(\"visibility\", \"hidden\");\r\n      $(\"#countValueType\").show();\r\n      $(\"#countValueType\").css(\"visibility\", \"visible\");\r\n    }\r\n  });\r\n\r\n  //Dropdown for the reporting \"widget\"\r\n  $(\"#boundary\").change(() => {\r\n    var selValue = $(\"#boundary\").val();\r\n    if (selValue == \"BlockGroups_1\") {\r\n      $(\"#bgAttSelect\").show();\r\n      $(\"#bgAttSelect\").css(\"visibility\", \"visible\");\r\n      $(\"#ctAttSelect\").hide();\r\n      $(\"#ctAttSelect\").css(\"visibility\", \"hidden\");\r\n      $(\"#countyAttSelect\").hide();\r\n      $(\"#countyAttSelect\").css(\"visibility\", \"hidden\");\r\n    } else if (selValue == \"CensusTracts_1\") {\r\n      $(\"#bgAttSelect\").hide();\r\n      $(\"#bgAttSelect\").css(\"visibility\", \"hidden\");\r\n      $(\"#ctAttSelect\").show();\r\n      $(\"#ctAttSelect\").css(\"visibility\", \"visible\");\r\n      $(\"#countyAttSelect\").hide();\r\n      $(\"#countyAttSelect\").css(\"visibility\", \"hidden\");\r\n    } else if (selValue == \"County_1\") {\r\n      $(\"#bgAttSelect\").hide();\r\n      $(\"#bgAttSelect\").css(\"visibility\", \"hidden\");\r\n      $(\"#ctAttSelect\").hide();\r\n      $(\"#ctAttSelect\").css(\"visibility\", \"hidden\");\r\n      $(\"#countyAttSelect\").show();\r\n      $(\"#countyAttSelect\").css(\"visibility\", \"visible\");\r\n    }\r\n  });\r\n\r\n  //=================================\r\n  //Determine the value to apply for the filter\r\n  $(\"#queryResults\").click(() => {\r\n    var selValue = $(\"#boundaryType\").val();\r\n    if (selValue == \"County\") {\r\n      var value = $(\"#countValueType\").val();\r\n      view.whenLayerView(county).then(layerView => {\r\n        let countyLayerView = layerView;\r\n        countyLayerView.effect = {\r\n          filter: {\r\n            where: \"Name = '\" + value + \" County'\"\r\n          },\r\n          excludedEffect: \"grayscale(100%) opacity(50%)\"\r\n        };\r\n      });\r\n    } else if (selValue == \"CensusTracts\") {\r\n      var ctValue = $(\"#ctValueType\").val();\r\n      view.whenLayerView(censusTracts).then(layerView => {\r\n        layerView.effect = {\r\n          filter: {\r\n            where: \"Tract = '\" + ctValue + \"'\"\r\n          },\r\n          excludedEffect: \"opacity(0%)\"\r\n        };\r\n      });\r\n    } else if (selValue == \"BlockGroups\") {\r\n      var bgValue = $(\"#bgValueType\").val();\r\n      view.whenLayerView(censusBlocks).then(layerView => {\r\n        layerView.effect = {\r\n          filter: {\r\n            where: \"Block_Group = '\" + bgValue + \"'\"\r\n          },\r\n          excludedEffect: \"opacity(0%)\"\r\n        };\r\n      });\r\n    }\r\n  });\r\n\r\n  $(\"#clearResults\").click(() => {\r\n    view.whenLayerView(county).then(layerView => {\r\n      let countyLayerView = layerView;\r\n      countyLayerView.effect = null;\r\n    });\r\n    view.whenLayerView(censusTracts).then(layerView => {\r\n      layerView.effect = null;\r\n    });\r\n    view.whenLayerView(censusBlocks).then(layerView => {\r\n      layerView.effect = null;\r\n    });\r\n  });\r\n\r\n  //=============================\r\n  //Testing the creation of a grid table\r\n  var gridDiv = document.getElementById(\"reportList\");\r\n  var gridFields = [\"__OBJECTID\",\"tp_1980\",\"tp_1990\",\"tp_2000\",\"tp_2010\",\"Pop_Total\",\"Pop_White\",\"Pop_Black\",\"Pop_Hispanic\",\"Pop_Asian\",\"Pop_Other\",\"Auto_0_Car\",\"Auto_1_Car\",\"Auto_2_Car\",\"Auto_3_Car\",\"Auto_4Plus_Car\",\"Age_Under_5\",\"Age_5to17\",\"Age_18to34\",\"Age_35to64\",\"Age_65plus\",\"Edu_No_High_School\",\"Edu_High_School\",\"Edu_Associate\",\"Edu_Bachelors\",\"Edu_Graduate\",\"Lang_No_Eng\",\"Lang_Eng_Not_Well\",\"Lang_Eng_Well\",\"Lang_Eng_Very_Well\",\"Lang_Eng_Only\",\"Inc_Below_25\",\"Inc_25To50\",\"Inc_50To100\",\"Inc_Above_100\",\"Inc_HH_Median\"];\r\n  let grid, carGrid, ageGrid, educateGrid, langGrid, incomeGrid, populationGrid;\r\n\r\n  //Create a new datastore for the on demandgrid\r\n  var dataStore = new StoreAdapter({\r\n    objectStore: new Memory({\r\n      idProperty: \"__OBJECTID\"\r\n    })\r\n  });\r\n\r\n  //County query tasks\r\n  var countyTask = new QueryTask({\r\n      url: \"https://gis.h-gac.com/arcgis/rest/services/Census_ACS/Census_ACS_5Yr_Counties/MapServer/0\"\r\n  });\r\n\r\n  //Block Group query tasks\r\n  var blockTask = new QueryTask({\r\n    url: \"https://gis.h-gac.com/arcgis/rest/services/Census_ACS/Census_ACS_5Yr_Block_Groups/MapServer/0\"\r\n  });\r\n\r\n  //Census Tracts query tasks\r\n  var tractTask = new QueryTask({\r\n    url: \"https://gis.h-gac.com/arcgis/rest/services/Census_ACS/Census_ACS_5Yr_Tracts/MapServer/0\"\r\n  });\r\n\r\n  var params = new Query({\r\n      returnGeometry: true\r\n  });\r\n\r\n  $(\"#doBtn\").on(\"click\", doQuery);\r\n\r\n  function popGrid(response) {\r\n    var graphics = response.features;\r\n    createGrid(response.fields);\r\n\r\n    var data = graphics.map((feature, i) => {\r\n        return Object.keys(feature.attributes)\r\n            .filter((key) => {\r\n                return (gridFields.indexOf(key) !== -1);\r\n            })\r\n            .reduce((obj, key) => {\r\n                obj[key] = feature.attributes[key];\r\n                return obj;\r\n            }, {});\r\n    });\r\n    dataStore.objectStore.data = data;\r\n    grid.set(\"collection\", dataStore);\r\n    carGrid.set(\"collection\", dataStore);\r\n    ageGrid.set(\"collection\", dataStore);\r\n    educateGrid.set(\"collection\", dataStore);\r\n    langGrid.set(\"collection\", dataStore);\r\n    incomeGrid.set(\"collection\", dataStore);\r\n    populationGrid.set(\"collection\", dataStore);\r\n  }\r\n\r\n  function createGrid(fields) {\r\n    var columns = fields\r\n      .filter((field, i) => {\r\n        if (gridFields.indexOf(field.name) !== -1) {\r\n          return field;\r\n        }\r\n      })\r\n      .map((field) => {\r\n        if (field.name === \"__OBJECTID\") {\r\n          return {\r\n            field: field.name,\r\n            label: field.name,\r\n            sortable: true,\r\n            hidden: true\r\n          };\r\n        } else {\r\n          return {\r\n            field: field.name,\r\n            label: field.alias,\r\n            sortable: true\r\n          };\r\n        }\r\n      });\r\n\r\n    grid = new(declare([OnDemandGrid, Selection]))({\r\n        columns: {\r\n            \"Pop_White\": {\"label\": \"White Population\", \"formatter\": dojoNum.format},\r\n            \"Pop_Black\": {\"label\": \"Black Population\", \"formatter\": dojoNum.format},\r\n            \"Pop_Hispanic\": {\"label\": \"Hispanic Population\", \"formatter\": dojoNum.format},\r\n            \"Pop_Asian\": {\"label\": \"Asian Population\", \"formatter\": dojoNum.format},\r\n            \"Pop_Other\": {\"label\": \"Other Population\", \"formatter\": dojoNum.format}\r\n        }\r\n    }, \"grid\");\r\n\r\n    ageGrid = new(declare([OnDemandGrid, Selection]))({\r\n      columns: {\r\n        \"Age_Under_5\": {\"label\":\"5 & Under\", \"formatter\": dojoNum.format},\r\n        \"Age_5to17\": {\"label\":\"5 to 17\", \"formatter\": dojoNum.format},\r\n        \"Age_18to34\": {\"label\":\"18 to 34\", \"formatter\": dojoNum.format},\r\n        \"Age_35to64\": {\"label\":\"35 to 64\", \"formatter\": dojoNum.format},\r\n        \"Age_65plus\": {\"label\":\"65 & Older\", \"formatter\": dojoNum.format}\r\n      }\r\n    }, \"agegrid\");\r\n\r\n    carGrid = new(declare([OnDemandGrid, Selection]))({\r\n      columns: {\r\n        \"Auto_0_Car\": {\"label\":\"No Cars\", \"formatter\": dojoNum.format},\r\n        \"Auto_1_Car\": {\"label\":\"1 Car\", \"formatter\": dojoNum.format},\r\n        \"Auto_2_Car\": {\"label\":\"2 Cars\", \"formatter\": dojoNum.format},\r\n        \"Auto_3_Car\": {\"label\":\"3 Cars\", \"formatter\": dojoNum.format},\r\n        \"Auto_4Plus_Car\": {\"label\":\"4+ Cars\", \"formatter\": dojoNum.format}\r\n      }\r\n    }, \"cargrid\");\r\n\r\n    educateGrid = new(declare([OnDemandGrid, Selection]))({\r\n      columns: {\r\n        \"Edu_No_High_School\": {\"label\":\"No High School\", \"formatter\": dojoNum.format},\r\n        \"Edu_High_School\": {\"label\":\"Only High School\", \"formatter\": dojoNum.format},\r\n        \"Edu_Associate\": {\"label\":\"Associate's Degree\", \"formatter\": dojoNum.format},\r\n        \"Edu_Bachelors\": {\"label\":\"Bachelor's Degree\", \"formatter\": dojoNum.format},\r\n        \"Edu_Graduate\": {\"label\":\"Graduate Degree\", \"formatter\": dojoNum.format}\r\n      }\r\n    }, \"educationgrid\");\r\n    \r\n    langGrid = new(declare([OnDemandGrid, Selection]))({\r\n      columns: {\r\n        \"Lang_No_Eng\": {\"label\":\"No English\", \"formatter\": dojoNum.format},\r\n        \"Lang_Eng_Not_Well\": {\"label\":\"English Not Well\", \"formatter\": dojoNum.format},\r\n        \"Lang_Eng_Well\": {\"label\":\"English Well\", \"formatter\": dojoNum.format},\r\n        \"Lang_Eng_Very_Well\": {\"label\":\"English Very Well\", \"formatter\": dojoNum.format},\r\n        \"Lang_Eng_Only\": {\"label\":\"English Only\", \"formatter\": dojoNum.format}\r\n      }\r\n    }, \"langgrid\");\r\n\r\n    incomeGrid = new(declare([OnDemandGrid, Selection]))({\r\n      columns: {\r\n        \"Inc_Below_25\": {\"label\":\"Income Below 25K\", \"formatter\": dojoNum.format},\r\n        \"Inc_25To50\": {\"label\":\"Income Between 25 & 50K\", \"formatter\": dojoNum.format},\r\n        \"Inc_50To100\": {\"label\":\"Income Between 50 & 100K\", \"formatter\": dojoNum.format},\r\n        \"Inc_Above_100\": {\"label\":\"Income Above 100k\", \"formatter\": dojoNum.format},\r\n        \"Inc_HH_Median\": {\"label\":\"Median Household Income\", \"formatter\": dojoNum.format}\r\n      }\r\n    }, \"incomegrid\");\r\n\r\n    populationGrid = new(declare([OnDemandGrid, Selection]))({\r\n      columns: {\r\n        \"Pop_Total\": {\"label\":\"Current Total Population\", \"formatter\": dojoNum.format},\r\n        \"tp_2010\": {\"label\":\"Total Population in 2010\", \"formatter\": dojoNum.format},\r\n        \"tp_2000\": {\"label\":\"Total Population in 2000\", \"formatter\": dojoNum.format},\r\n        \"tp_1990\": {\"label\":\"Total Population in 1990\", \"formatter\": dojoNum.format},\r\n        \"tp_1980\": {\"label\":\"Total Population in 1980\", \"formatter\": dojoNum.format}\r\n      }\r\n    }, \"populationgrid\");\r\n  }\r\n\r\n  function doClear(){\r\n    if (grid && carGrid && ageGrid && educateGrid){\r\n      dataStore.objectStore.data = {};\r\n      grid.set(\"collection\", dataStore);\r\n      carGrid.set(\"collection\", dataStore);\r\n      ageGrid.set(\"collection\", dataStore);\r\n      educateGrid.set(\"collection\", dataStore);\r\n      langGrid.set(\"collection\", dataStore);\r\n      incomeGrid.set(\"collection\", dataStore);\r\n      populationGrid.set(\"collection\", dataStore);\r\n    }\r\n  }\r\n\r\n  function doQuery(){\r\n    doClear();\r\n    var boundaryValue = $(\"#boundary\").val();\r\n    if (boundaryValue == \"BlockGroups_1\"){\r\n      var attributeName = $(\"#bgAttSelect\").val();\r\n      params.where = \"Block_Group = '\" + attributeName + \"'\";\r\n      params.outFields = [\"*\"];\r\n      blockTask.execute(params)\r\n        .then(popGrid);\r\n    } else if (boundaryValue == \"CensusTracts_1\"){\r\n      var ctAttributeName = $(\"#ctAttSelect\").val();\r\n      params.where = \"Tract = '\" + ctAttributeName + \"'\";\r\n      params.outFields = [\"*\"];\r\n      tractTask.execute(params)\r\n        .then(popGrid);\r\n    } else if (boundaryValue == \"County_1\"){\r\n      var countyAttributeName = $(\"#countyAttSelect\").val();\r\n      params.where = \"Name = '\" + countyAttributeName + \" County'\";\r\n      console.log(params.where);\r\n      params.outFields = [\"*\"];\r\n\r\n      countyTask.execute(params)\r\n          .then(popGrid);\r\n    }\r\n  }\r\n\r\n  //Export the grid table to a CSV file\r\n  $(\"#export\").on(\"click\", function(){\r\n    customExportCSV(dataStore);\r\n  });\r\n\r\n\r\n  function customExportCSV(evt){\r\n    var data = evt.objectStore.data;\r\n    console.log(data);\r\n    var csv = convertArrayOfObjectsToCSV({\r\n      data: data\r\n    });\r\n\r\n    csv = \"data:text/csv;charset=utf-8,\" + csv;\r\n\r\n    var encodedUri = encodeURI(csv);\r\n    var link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"Export.csv\");\r\n    link.click();\r\n  }\r\n\r\n  function convertArrayOfObjectsToCSV(value){\r\n    var result, ctr, keys, columnDelimiter, lineDelimiter, data;\r\n\r\n    data = value.data || null;\r\n    if (data == null || !data.length){\r\n      return null;\r\n    }\r\n\r\n    columnDelimiter = value.columnDelimiter || \",\";\r\n    lineDelimiter = value.lineDelimiter || \"\\n\";\r\n\r\n    keys = Object.keys(data[\"0\"]);\r\n    result = \"\";\r\n    result += keys.join(columnDelimiter);\r\n    result += lineDelimiter;\r\n\r\n    data.forEach(function(item){\r\n      ctr = 0;\r\n      keys.forEach(function(key){\r\n        result += item[key];\r\n        result += columnDelimiter;\r\n      });\r\n      result += lineDelimiter;\r\n    });\r\n    return result;\r\n  }\r\n\r\n\r\n});\r\n"],"file":"main.js"}